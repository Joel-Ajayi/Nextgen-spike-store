### This file was generated by Nexus Schema
### Do not make changes to this file directly


enum CatFilterType {
  Num
  Range
  Txt
}

enum CatTypeEnum {
  Basic
  SubOrd
  SuperOrd
}

input CategoryFilterInput {
  isRequired: Boolean!
  name: String!
  options: [String!]!
  type: CatFilterType!
  unit: String
}

type CategoryFilterObj {
  id: String!
  isRequired: Boolean!
  name: String!
  options: [String!]!
  type: CatFilterType!
  unit: String
}

input CategoryFilterUpdateInput {
  id: String!
  isRequired: Boolean!
  name: String!
  options: [String!]!
  type: CatFilterType!
  unit: String
}

input CategoryInput {
  banners: [Upload!]!
  description: String
  filters: [CategoryFilterInput!]!
  image: Upload
  name: String!
  parent: String
}

type CategoryMiniObj {
  name: String!
  parent: String!
  type: CatTypeEnum!
}

type CategoryObj {
  banners: [String!]!
  description: String!
  filters: [CategoryFilterObj!]!
  id: String!
  image: String!
  name: String!
  parent: String
  type: CatTypeEnum!
}

input CategoryUpdateInput {
  banners: [Upload!]!
  description: String
  filters: [CategoryFilterUpdateInput!]!
  id: String!
  image: Upload
  name: String!
}

type Message {
  message: String!
}

type Mutation {
  CreateCategory(data: CategoryInput): CategoryMiniObj
  ForgotPassword(data: SetTokenInput): Message
  SignIn(data: SignInInput): Message
  SignOut: Message
  SignUp(data: SignUpInput): Message
  UpdateCategory(data: CategoryUpdateInput): CategoryMiniObj
  UpdateCategoryParent(name: String!, parent: String!): CategoryMiniObj
  VerifyAccount(data: SetTokenInput): Message
  VerifyPasswordToken(data: VerificationTokenInput): Message
  VerifyToken(data: VerificationTokenInput): Message
}

type Query {
  GetCategories: [CategoryMiniObj!]!
  GetCategory(name: String!): CategoryObj
  UserQuery: User
}

input SetTokenInput {
  email: String!
}

input SignInInput {
  email: String
  pwd: String
}

input SignUpInput {
  email: String
  pwd: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  avatar: String!
  contactNumber: String
  email: String!
  fullName: String
  id: ID!
  role: Int!
}

input VerificationTokenInput {
  token: String!
}